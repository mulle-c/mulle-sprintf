# How to build mulle-sprintf


## What you get

* `libmulle_sprintf.a` and `libmulle_sprintf_standalone.dylib|so|dll` the
mulle-sprintf libraries along with a bunch of headers. The standalone
library is useful for testing.



## Prerequisites

#### mulle-c11

[mulle-c11](//github.com/{{PUBLISHER}}/mulle-c11/) is a header
that abstracts a small set of non-standardized compiler features.


#### mulle-allocator

[mulle-allocator](//github.com/{{PUBLISHER}}/mulle-allocator/) provides the
memory allocation infrastructure.


#### mulle-buffer

[mulle-buffer](//github.com/{{PUBLISHER}}/mulle-buffer/) allows sprintf to be used
without having to fear buffer overflows.


#### mulle-utf

[mulle-utf](//github.com/{{PUBLISHER}}/mulle-utf/) provides unicode character
handling for wide strings.


#### mulle-configuration

[mulle-configuration](//github.com/{{PUBLISHER}}/mulle-configuration/)
are configuration files for building with Xcode or cmake. This is expected to
exist in the project directory root.


#### mulle-thread

[mulle-thread](//github.com/{{PUBLISHER}}/mulle-thread/) contains
the necessary mutex for test sprintfs locking.



## Nice to have

#### mulle-build

[mulle-build](//github.com/{{PUBLISHER}}/mulle-build) is used
to assemble the dependencies together and build the library.


#### mulle-homebrew

[mulle-homebrew](//github.com/{{PUBLISHER}}/mulle-homebrew/) is
support for generating homebrew formulae. This is expected to
exist in `./bin`, if you want to release a fork.

#### mulle-tests

[mulle-tests](//github.com/{{PUBLISHER}}/mulle-tests/) are
scripts to provide an environment for running the tests. This is expected to
exist in `./tests`, if you want to run tests.


### Windows: Installing further prerequisites

Check the [mulle-build README.md](//github.com/{{PUBLISHER}}/mulle-build/README.md)
for instrutions how to get the "Git for Windows" bash going.


### OSX: Install mulle-build using homebrew

Install the [homebrew](//brew.sh/) package manager, then

```
brew install {{PUBLISHER_TAP}}/mulle-build
```

### Linux: Install mulle-build using linuxbrew

Install the [linuxbrew](//linuxbrew.sh/) package manager, then it seems you
may need `python-setuptools` dependency as well:

```
sudo apt-get install python-setuptools
```

and then

```
brew install {{PUBLISHER_TAP}}/mulle-build
```

### All: Install mulle-build using git

```
git clone --branch release https://github.com/{{PUBLISHER}}/mulle-bootstrap
( cd mulle-bootstrap ; ./install.sh )
git clone --branch release https://github.com/{{PUBLISHER}}/mulle-build
( cd mulle-build ; ./install.sh )
```

## All: Install mulle-sprintf using mulle-build


Grab the latest **mulle-sprintf** release and go into the project directory:

```
git clone --branch release https://github.com/mulle-objc/mulle-sprintf
cd mulle-sprintf
```

Then let **mulle-build** fetch the dependencies and build **mulle-sprintf** in
debug mode:

```
mulle-build --debug
```

Build library in release mode and install into `tmp` :

```
mulle-clean ;
mulle-install --prefix /tmp
```
